var $jscomp={scope:{},checkStringArgs:function(a,c,b){if(null==a)throw new TypeError("The 'this' value for String.prototype."+b+" must not be null or undefined");if(c instanceof RegExp)throw new TypeError("First argument to String.prototype."+b+" must not be a regular expression");return a+""}};
$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)};$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(a,c,b,d){if(c){b=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in b||(b[e]={});b=b[e]}a=a[a.length-1];d=b[a];c=c(d);c!=d&&null!=c&&$jscomp.defineProperty(b,a,{configurable:!0,writable:!0,value:c})}};$jscomp.polyfill("String.prototype.includes",function(a){return a?a:function(a,b){return-1!==$jscomp.checkStringArgs(this,a,"includes").indexOf(a,b||0)}},"es6-impl","es3");
var express=require("express"),bodyParser=require("body-parser"),logger=require("morgan"),emojiRegex=require("emoji-regex"),nodeEmoji=require("node-emoji"),slack=require("slack"),moment=require("moment"),app=express(),port=process.env.PORT||5E3;app.use(logger("dev"));app.use(bodyParser.urlencoded({extended:!0}));app.use(bodyParser.json());var router=express.Router();
app.post("/",function(a,c,b){if(a.body.token&&a.body.token===process.env.SECRET_TOKEN){b=process.env.SLACK_TOKEN;console.log(a.body);var d=a.body.title,e=moment(a.body.start,"MMM D, YYYY [at] hh:mmA");a=moment(a.body.end,"MMM D, YYYY [at] hh:mmA");d.includes("Woo Chat")&&(console.log("Setting snooze"),console.log(d),slack.dnd.setSnooze({token:b,num_minutes:a.diff(e,"minutes")}));var f=":chat-green:";d.match("Reserve")&&(f=":happychat:");d.match("Tickets")&&(f=":zendesk2:");d=d+" from "+e.format("h:mm")+
" to "+a.format("h:mm a");e=JSON.stringify({status_text:d,status_emoji:f,status_expiration:a.utcOffset(-10,!0).unix()});console.log(e);slack.users.profile.set({token:b,profile:e});console.log('Status set as "'+d+'" and will expire at '+a.format("h:mm a"));c.status(200);c.send("\ud83e\udd18")}else b()});
app.get("/",function(a,c,b){c.send('\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset="utf-8">\n        <title>Welcome!</title>\n        <style>\n          pre {\n            background-color: #DDD;\n            padding: 1em;\n            display: inline-block;\n          }\n        </style>\n      </head>\n      <body>\n        <h1>Your Heroku server is running!</h1>\n        <p>You\'ll need the following information for your IFTTT recipe:</p>\n        <h3>Body</h3>\n<pre>{\n  "title":"<<<{{Title}}>>>",\n  "start":"{{Starts}}",\n  "end":"{{Ends}}",\n  "token": "'+process.env.SECRET_TOKEN+
'"\n}</pre>\n      </body>\n    </html>\n  ')});app.use(function(a,c,b){c.status(404);c.send("Not found")});app.listen(port);console.log("Server running on port "+port);
